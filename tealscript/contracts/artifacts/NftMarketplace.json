{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "getApplicationAddress()address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createEvent(string,uint64,uint64,uint64,uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mintNFT(string,string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mapNFTdata(asset,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "buyNFTFromEvent(pay,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "listingNFT(asset,uint64,axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "unListingNFT(uint64,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "buyNFTFromMarketplace(uint64,pay,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getEventName(uint64)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getNFTAmountLeft(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getNFTPrice(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getEventByNFT(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getNFTType(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getNFTAsset(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getOrderOwner(uint64)address": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getOrderNFT(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getOrderPrice(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getOrderStatus(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "eventIndex": {
          "type": "uint64",
          "key": "eventIndex"
        },
        "nftIndex": {
          "type": "uint64",
          "key": "nftIndex"
        },
        "orderIndex": {
          "type": "uint64",
          "key": "orderIndex"
        },
        "nft": {
          "type": "uint64",
          "key": "nft"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "NftMarketplace",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getApplicationAddress",
        "args": [],
        "desc": "",
        "returns": {
          "type": "address",
          "desc": ""
        }
      },
      {
        "name": "createEvent",
        "args": [
          {
            "name": "name",
            "type": "string",
            "desc": ""
          },
          {
            "name": "nft1",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nft2",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nft3",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nft1price",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nft2price",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nft3price",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "mintNFT",
        "args": [
          {
            "name": "name",
            "type": "string",
            "desc": ""
          },
          {
            "name": "url",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "mapNFTdata",
        "args": [
          {
            "name": "nft",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "eventId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nftType",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "buyNFTFromEvent",
        "args": [
          {
            "name": "payment",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "nft",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "listingNFT",
        "args": [
          {
            "name": "nft",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "price",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "axfer",
            "type": "axfer",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "unListingNFT",
        "args": [
          {
            "name": "orderId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nft",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "buyNFTFromMarketplace",
        "args": [
          {
            "name": "orderId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "payment",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "nft",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "getEventName",
        "args": [
          {
            "name": "eventId",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "string",
          "desc": ""
        }
      },
      {
        "name": "getNFTAmountLeft",
        "args": [
          {
            "name": "eventId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nftType",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getNFTPrice",
        "args": [
          {
            "name": "eventId",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "nftType",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getEventByNFT",
        "args": [
          {
            "name": "nftIndex",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getNFTType",
        "args": [
          {
            "name": "nftIndex",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getNFTAsset",
        "args": [
          {
            "name": "nftIndex",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getOrderOwner",
        "args": [
          {
            "name": "orderId",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "address",
          "desc": ""
        }
      },
      {
        "name": "getOrderNFT",
        "args": [
          {
            "name": "orderId",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getOrderPrice",
        "args": [
          {
            "name": "orderId",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "getOrderStatus",
        "args": [
          {
            "name": "orderId",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      }
    ]
  }
}